##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /       

module Twilio
  module REST
    class Preview < Domain
      class Insights < Version
        class CallContext < InstanceContext
          class SummaryList < ListResource
            ##
            # Initialize the SummaryList
            # @param [Version] version Version that contains the resource
            # @param [String] sid The sid
            
            # @return [SummaryList] SummaryList
            def initialize(version, sid: nil)
              super(version)
              
              # Path Solution
              @solution = {
                  sid: sid
              }
            end
            
            ##
            # Provide a user friendly representation
            def to_s
              '#<Twilio.Preview.Insights.SummaryList>'
            end
          end
        
          class SummaryPage < Page
            ##
            # Initialize the SummaryPage
            # @param [Version] version Version that contains the resource
            # @param [Response] response Response from the API
            # @param [Hash] solution Path solution for the resource
            # @param [String] sid The sid
            
            # @return [SummaryPage] SummaryPage
            def initialize(version, response, solution)
              super(version, response)
              
              # Path Solution
              @solution = solution
            end
            
            ##
            # Build an instance of SummaryInstance
            # @param [Hash] payload Payload response from the API
            
            # @return [SummaryInstance] SummaryInstance
            def get_instance(payload)
              return SummaryInstance.new(
                  @version,
                  payload,
                  sid: @solution['sid'],
              )
            end
            
            ##
            # Provide a user friendly representation
            def to_s
              '<Twilio.Preview.Insights.SummaryPage>'
            end
          end
        
          class SummaryContext < InstanceContext
            ##
            # Initialize the SummaryContext
            # @param [Version] version Version that contains the resource
            # @param [String] call_sid The call_sid
            
            # @return [SummaryContext] SummaryContext
            def initialize(version, call_sid)
              super(version)
              
              # Path Solution
              @solution = {
                  call_sid: call_sid,
              }
              @uri = "/Calls/#{@solution[:call_sid]}/Summary"
            end
            
            ##
            # Fetch a SummaryInstance
            # @return [SummaryInstance] Fetched SummaryInstance
            def fetch
              params = {}
              
              payload = @version.fetch(
                  'GET',
                  @uri,
                  params,
              )
              
              return SummaryInstance.new(
                  @version,
                  payload,
                  call_sid: @solution['call_sid'],
              )
            end
            
            ##
            # Provide a user friendly representation
            def to_s
              context = @solution.map {|k, v| "#{k}: #{v}"}.join(',')
              "#<Twilio.Preview.Insights.SummaryContext #{context}>"
            end
          end
        
          class SummaryInstance < InstanceResource
            ##
            # Initialize the SummaryInstance
            # @param [Version] version Version that contains the resource
            # @param [Hash] payload payload that contains response from Twilio
            # @param [String] sid The sid
            # @param [String] call_sid The call_sid
            
            # @return [SummaryInstance] SummaryInstance
            def initialize(version, payload, sid: nil, call_sid: nil)
              super(version)
              
              # Marshaled Properties
              @properties = {
                  'account_sid' => payload['account_sid'],
                  'parent_account_sid' => payload['parent_account_sid'],
                  'call_sid' => payload['call_sid'],
                  'account_friendly_name' => payload['account_friendly_name'],
                  'parent_account_friendly_name' => payload['parent_account_friendly_name'],
                  'summary' => payload['summary'],
              }
              
              # Context
              @instance_context = nil
              @params = {
                  'sid' => sid,
                  'call_sid' => call_sid || @properties['call_sid'],
              }
            end
            
            ##
            # Generate an instance context for the instance, the context is capable of
            # performing various actions.  All instance actions are proxied to the context
            # @param [Version] version Version that contains the resource
            
            # @return [SummaryContext] SummaryContext for this SummaryInstance
            def context
              unless @instance_context
                @instance_context = SummaryContext.new(
                    @version,
                    @params['call_sid'],
                )
              end
              @instance_context
            end
            
            def account_sid
              @properties['account_sid']
            end
            
            def parent_account_sid
              @properties['parent_account_sid']
            end
            
            def call_sid
              @properties['call_sid']
            end
            
            def account_friendly_name
              @properties['account_friendly_name']
            end
            
            def parent_account_friendly_name
              @properties['parent_account_friendly_name']
            end
            
            def summary
              @properties['summary']
            end
            
            ##
            # Fetch a SummaryInstance
            # @return [SummaryInstance] Fetched SummaryInstance
            def fetch
              @context.fetch()
            end
            
            ##
            # Provide a user friendly representation
            def to_s
              context = @params.map{|k, v| "#{k}: #{v}"}.join(" ")
              "<Twilio.Preview.Insights.SummaryInstance #{context}>"
            end
          end
        end
      end
    end
  end
end